<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FileDialogFilter_CsFiles" xml:space="preserve">
    <value>C# Files</value>
  </data>
  <data name="FileDialogFilter_LuaFiles" xml:space="preserve">
    <value>Lua Files</value>
  </data>
  <data name="FileDialogFilter_ModFiles" xml:space="preserve">
    <value>Mod Files</value>
  </data>
  <data name="FileDialogFilter_ModpackFiles" xml:space="preserve">
    <value>Modpack Files</value>
  </data>
  <data name="ViewModels_Rtdx_Automation_ModpackCreatorViewModel_Name" xml:space="preserve">
    <value>Modpack Creator</value>
  </data>
  <data name="ViewModels_Rtdx_Tutorial_CustomizeRomViewModel_LayeredFsOpenFolderDialogTitle" xml:space="preserve">
    <value>Select your Switch Micro SD</value>
  </data>
  <data name="ViewModels_Rtdx_Tutorial_CustomizeRomViewModel_Name" xml:space="preserve">
    <value>Tutorial</value>
  </data>
  <data name="ViewModels_Rtdx_Tutorial_FinishedViewModel_Name" xml:space="preserve">
    <value>Tutorial</value>
  </data>
  <data name="ViewModels_Rtdx_Tutorial_IntroViewModel_Name" xml:space="preserve">
    <value>Tutorial</value>
  </data>
  <data name="ViewModels_Rtdx_Tutorial_ModpackViewModel_Name" xml:space="preserve">
    <value>Tutorial</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_AddModDirectory" xml:space="preserve">
    <value>Open Directory</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_AddModFile" xml:space="preserve">
    <value>Open File</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_Build" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModAuthor" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModEnabled" xml:space="preserve">
    <value>Enabled by Default</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModId" xml:space="preserve">
    <value>ID (Must be unique across all mods)</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModpackAuthor" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModpackDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModpackId" xml:space="preserve">
    <value>ID (Must be unique across all modpacks)</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModpackName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModpackTarget" xml:space="preserve">
    <value>Target</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModpackVersion" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_Mods" xml:space="preserve">
    <value>Mods</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModTarget" xml:space="preserve">
    <value>Target</value>
  </data>
  <data name="Views_Automation_ModpackCreatorView_ModVersion" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Views_MainWindowView_ApplyModMenuItem" xml:space="preserve">
    <value>_Apply Mod</value>
  </data>
  <data name="Views_MainWindowView_AutomationMenuItem" xml:space="preserve">
    <value>_Automation</value>
  </data>
  <data name="Views_MainWindowView_CreateAutomationScriptMenuItem" xml:space="preserve">
    <value>_Create Change Script</value>
  </data>
  <data name="Views_MainWindowView_FileMenuItem" xml:space="preserve">
    <value>_File</value>
  </data>
  <data name="Views_MainWindowView_ModpackCreatorMenuItem" xml:space="preserve">
    <value>Modpack Creator</value>
  </data>
  <data name="Views_MainWindowView_OpenDirectoryMenuItem" xml:space="preserve">
    <value>_Open</value>
  </data>
  <data name="Views_MainWindowView_SaveDirectoryAsMenuItem" xml:space="preserve">
    <value>_Save As...</value>
  </data>
  <data name="Views_MainWindowView_SaveMenuItem" xml:space="preserve">
    <value>_Save</value>
  </data>
  <data name="Views_Rtdx_RtdxDungeonView_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Views_Rtdx_RtdxRomView_DungeonsCollection" xml:space="preserve">
    <value>Dungeons</value>
  </data>
  <data name="Views_Rtdx_RtdxRomView_StartersCollection" xml:space="preserve">
    <value>Starters</value>
  </data>
  <data name="Views_Rtdx_RtdxStarterView_Move1" xml:space="preserve">
    <value>Move 1</value>
  </data>
  <data name="Views_Rtdx_RtdxStarterView_Move2" xml:space="preserve">
    <value>Move 2</value>
  </data>
  <data name="Views_Rtdx_RtdxStarterView_Move3" xml:space="preserve">
    <value>Move 3</value>
  </data>
  <data name="Views_Rtdx_RtdxStarterView_Move4" xml:space="preserve">
    <value>Move 4</value>
  </data>
  <data name="Views_Rtdx_RtdxStarterView_Pokemon" xml:space="preserve">
    <value>Pokémon</value>
  </data>
  <data name="Views_Rtdx_Tutorial_CustomizeRomView_IntroText" xml:space="preserve">
    <value>You may now customize the game to your liking. When you're done, click Save, and browse to the root of your Nintendo Switch Micro SD card. This will save files for Layered FS into your Atmosphere directory.</value>
  </data>
  <data name="Views_Rtdx_Tutorial_CustomizeRomView_SaveLayeredFs" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Views_Rtdx_Tutorial_FinishedView_IntroText" xml:space="preserve">
    <value>Your changes have been saved to your Micro SD card. Once you safely eject it, you can launch Atmosphere and begin the game.

Click Restart if you would like to start again from the beginning.</value>
  </data>
  <data name="Views_Rtdx_Tutorial_FinishedView_Restart" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="Views_Rtdx_Tutorial_IntroView_IntroText" xml:space="preserve">
    <value>This is a ROM editor for Pokémon Mystery Dungeon: Rescue Team DX. To begin, press "Open ROM Directory", and browse to the directory into which you have extracted your ROM.</value>
  </data>
  <data name="Views_Rtdx_Tutorial_IntroView_OpenRomDirectory" xml:space="preserve">
    <value>Open ROM Directory</value>
  </data>
  <data name="Views_Rtdx_Tutorial_ModpackView_ApplyModpack" xml:space="preserve">
    <value>Apply Modpack</value>
  </data>
  <data name="Views_Rtdx_Tutorial_ModpackView_IntroText" xml:space="preserve">
    <value>If you have a modpack that you wish to use, please click "Apply Modpack". Otherwise, click Next.</value>
  </data>
  <data name="Views_Rtdx_Tutorial_ModpackView_Next" xml:space="preserve">
    <value>Next</value>
  </data>
</root>